<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Java 어떤 파일에 sql문을 보낼지 경로 설정
    namespace 내에 mapper 경로 작성
-->
<mapper namespace="com.kh.khtAcademy.mapper.UserProfileMapper">
    <!-- sql문을 보낼 때 보낼 표기명 id에 작성 -->

    <!-- 모든 유저 조회 SQL : USERPROFILE 테이블에 저장되어 있는 유저들을 모두 조회 -->
    <select id="getAllUsers" >
        SELECT * FROM USERPROFILE
    </select>

    <!-- 유저 저장 SQL : 이름, 이메일, 생년월일, 계좌잔액, 성별, 취미 모두 작성이 잘 된 경우
                        * 유저아이디(저장순서번호)는 자동으로 번호매김이 순차적으로 되기 때문에
                                                    유저가 직접 작성하지 않음
     -->
    <insert id="insertUser">
        INSERT INTO USERPROFILE (USERNAME   ,    EMAIL,   BIRTHDATE,   ACCOUNT_BALANCE,     GENDER,    HOBBIES)
                         VALUES (#{username}, #{email}, #{birthdate},#{accountBalance} , #{gender}, #{hobbies});
    </insert>

    <!-- 이름 찾기 SQL : 일치하는 이메일이 조회되는 경우 -->
    <select id="findByUsername">
        SELECT USERNAME
        FROM USERPROFILE
        WHERE EMAIL = #{email}
    </select>

    <!-- 이메일 찾기 SQL : 유저이름과 성별이 일치하는 경우 -->
    <select id="findByEmail">
        SELECT EMAIL
        FROM USERPROFILE
        WHERE USERNAME = #{username}
        AND   GENDER   = #{gender}
    </select>

    <!--
    <select id="기능명칭">
    SELECT 컬럼명, 컬럼명, 컬럼명, ...
    FROM   테이블명
    WHERE  컬럼명 = #{자바변수명}
    </select>

    MyBatis 회사는 SQL 컬럼명을 우선으로 하기 때문에
    SQL 컬럼명은 마치 자바변수이름 작성하듯이 작성하면 되지만,
    자바 변수명은 #{} 안에 작성해야 함
    -->
</mapper>